<UserControl x:Class="IDCA.Client.View.TableSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodel="clr-namespace:IDCA.Client.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:TableSettingViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="700" 
             d:DesignWidth="1400">

    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Margin="20 0 0 0">

            <TextBlock>文件名称</TextBlock>
            <TextBox Width="120" Height="30" Margin="5" Text="{Binding TableName}" />
            
            <TextBlock>出示表头</TextBlock>
            <mah:MultiSelectionComboBox Width="150" 
                                        Height="30" 
                                        Margin="5"
                                        IsEditable="True"
                                        FontSize="{StaticResource IDCA.Font.Size.Content}"
                                        FontFamily="{StaticResource IDCA.Font.Family}"
                                        BorderBrush="{x:Static SystemColors.ControlDarkBrush}"
                                        Separator=";"
                                        ObjectToStringComparer="{mah:DefaultObjectToStringComparer}"
                                        StringToObjectParser="{x:Static mah:DefaultStringToObjectParser.Instance}"
                                        ItemsSource="{Binding Headers}"
                                        mah:MultiSelectorHelper.SelectedItems="{Binding HeadersToShow}"
                                        ScrollViewer.CanContentScroll="True"
                                        VerticalScrollBarVisibility="Hidden"
                                        HorizontalScrollBarVisibility="Hidden"
                                        Style="{StaticResource MahApps.Styles.MultiSelectionComboBox.Horizontal}"/>

            <Button Height="30" Width="100" Command="{Binding PushNewElementCommand}">添加表格</Button>
            
        </StackPanel>

        <DataGrid x:Name="MainDataGrid"
                  Grid.Row="1"
                  ItemsSource="{Binding ElementList}"
                  d:ItemsSource="{d:SampleData ItemCount=5}"
                  HeadersVisibility="All"
                  SelectionMode="Single"
                  SelectionUnit="CellOrRowHeader"
                  RowHeaderWidth="30">
            <DataGrid.Columns>
                <DataGridTextColumn Header="变量名" Width="120" Binding="{Binding VariableName}"/>
                <DataGridTextColumn Header="标题" Width="150" Binding="{Binding Title}"/>
                <DataGridTextColumn Header="Base描述" Width="100" Binding="{Binding BaseText}"/>
                <DataGridTextColumn Header="追加标签" Width="100" Binding="{Binding TableAppendLabel}"/>
                <DataGridComboBoxColumn Header="表格类型" 
                                        Width="110"
                                        ItemsSource="{x:Static viewmodel:TableSettingElementViewModel.TableTypeSelections}"
                                        SelectedItemBinding="{Binding TableTypeSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <!--<DataGridTemplateColumn Header="表格类型" Width="110">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox VerticalAlignment="Stretch"
                                      Background="Transparent"
                                      Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                                      ItemsSource="{x:Static viewmodel:TableSettingElementViewModel.TableTypeSelections}"
                                      SelectedIndex="{Binding TableTypeSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      VerticalContentAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <DataGridCheckBoxColumn Header="追加轴" Width="80" Binding="{Binding AddAdditionalAxis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTemplateColumn Header="轴表达式" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button IsEnabled="{Binding IsAxisSettingButtonEnabled}"
                                    Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                                    Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Command="{Binding AxisSettingCommand}">配置</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Header="新建变量" Width="90" Binding="{Binding AddNewVariable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTemplateColumn Header="配置变量" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                                    Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                                    IsEnabled="{Binding AddNewVariable}" 
                                    Content="配置"
                                    Command="{Binding NewVariableSettingCommand}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource IDCA.Styles.Button.Close}" Command="{Binding RemoveCommand}" Cursor="Hand"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
    </Grid>
    
</UserControl>
